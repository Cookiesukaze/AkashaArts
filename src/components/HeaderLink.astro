---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
---

<a id={href} href={href} class={className} data-nav-link {...props}>
	<slot />
</a>

<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>

<script>
	// Client-side script for debugging and path matching
	document.addEventListener('DOMContentLoaded', () => {
		if (typeof window !== 'undefined') {
			const links = document.querySelectorAll('a[data-nav-link]');
			const currentPath = window.location.pathname;

			links.forEach(link => {
				const href = link.getAttribute('href');

				// Normalize the path for comparison
				const normalizePath = (path) => path.replace(/\/+$/, '');

				const isActive = normalizePath(href) === normalizePath(currentPath) ||
					(currentPath.startsWith(href) && href !== '/');

				console.log('Client-side href:', href);
				console.log('Client-side currentPath:', currentPath);
				console.log('Client-side isActive:', isActive);

				if (isActive) {
					link.classList.add('active');
				} else {
					link.classList.remove('active');
				}
			});
		}
	});
</script>
